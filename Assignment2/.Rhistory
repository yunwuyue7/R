3+4
3+2
for i 1:10:
for (i in 1:100){}
clear
for (j in 1:i) {
if( (i %% j) == 0 ) {
break
}else{
cat(i,"\n")
}
}
for (d1 in 0:9) {
for (d2 in 0:d1) {
if( (sqrt(d1+d2) %% 1) == 0 ) {
cat(d1 , "+", d2, "=", sqrt(d1+d2), "squared \n")
}
}
}
for (i in 1:100) {
for (j in 1:i) {
if( (i %% j) == 0 ) {
break
}else{
cat(i,"\n")
}
}
}
for (d1 in 0:9) {
for (d2 in 0:d1) {
if( (sqrt(d1+d2) %% 1) == 0 ) {
cat(d1 , "+", d2, "=", sqrt(d1+d2), "squared \n")
}
}
}
for (i in 0:100) {
for (j in 0:i) {
if( (i %% j) == 0 ) {
cat(d1 , "+", d2, "=", sqrt(d1+d2), "squared \n")
}
}
}
for (i in 0:100) {
for (j in 0:i) {
if( (i %% j) == 0 ) {
break
}
else{
cat(i)
}
}
}
for (i in 1:100) {
for (j in 1:i) {
if( (i %% j) == 0 ) {
break
}else{
cat(i,"\n")
}
}
}
for (i in 1:10) {
for (j in 1:i) {
if( (i %% j) == 0 ) {
break
}else{
cat(i,"\n")
}
}
}
df <- data.frame(name=c(“jameela”, “erik”, “barack”), age=c(21, 26, 29))
clear
df <- data.frame(name=c(“jameela”, “erik”, “barack”), age=c(21, 26, 29))
df <- data.frame(name=c("jameela", "erik", "barack"), age=c(21, 26, 29))
df[df$name=="erik", "age"]
df[2,2]
df[2, "age"]
df$age[2]
df <- data.frame(name=c(“samir”, “erik”, “barack”), age=c(21, 26, 29))
df <- data.frame(name=c("samir", "erik", "barack"), age=c(21, 26, 29))
data(mtcars)
?mtcars
?mtcars
head(mtcars)
apply(mtcars, 2, summary_stats)
apply(mtcars, 2, summary_stats)
clear
summary_stats = function(x) {
c(Mean = mean(x), Median = median(x), SD = sd(x))
}
apply(mtcars, 2, summary_stats)
c(Mean = mean(x), Median = median(x), SD = sd(x))
apply(mtcars, 2, summary_stats)
library(ggplot2)
data(mtcars)
ggplot(mtcars, aes(x = disp, y = hp)) +
geom_point(aes(color = mpg), size = 3) +
scale_color_gradient(low = "red", high = "blue") +
labs(x = "Displacement", y = "Horsepower", color = "MPG")
pwd
exit
clear
library(dplyr)
library(tidyr)
library(reader)
exit
library(dplyr)
library(tidyr)
setwd("C:/Users/shenxuan/Desktop/R/Assignment2")
healthcare_spending <- read.csv("healthcare_spending.csv")
life_expectancy <- read.csv("life_expectancy.csv")
country_codes <- read.csv("country_codes.csv")
healthcare_spending_2018 <- filter(healthcare_spending, Year == 2018)
library(dplyr)
library(ggplot2)
healthcare_spending_2018 <- filter(healthcare_spending, Year == 2018)
healthcare_spending_2018 <- filter(healthcare_spending, YearValue == 2018)
names(healthcare_spending)
names(life_expectancy)
healthcare_spending_2018 <- filter(healthcare_spending, TIME == 2018)
life_expectancy_2018 <- filter(life_expectancy, TIME == 2018)
merged_data <- inner_join(healthcare_spending_2018, life_expectancy_2018, by = "CountryCode")
merged_data <- inner_join(healthcare_spending, life_expectancy, by = c("LOCATION" = "LOCATION"))
final_dataset <- drop_na(merged_data)
setwd("C:/Users/shenxuan/Desktop/R/Assignment2")
library(dplyr)
library(ggplot2)
healthcare_spending <- read.csv("healthcare_spending.csv")
life_expectancy <- read.csv("life_expectancy.csv")
country_codes <- read.csv("country_codes.csv")
# Filter and join the datasets
merged_data <- healthcare_spending %>%
filter(year == 2018) %>%
inner_join(life_expectancy %>% filter(year == 2018), by = "country_code") %>%
inner_join(country_codes, by = "country_code") %>%
drop_na()
# Sort by life expectancy in descending order
merged_data <- merged_data %>%
arrange(desc(life_expectancy))
# Filter and join the datasets
merged_data <- healthcare_spending %>%
filter(year == 2018) %>%
inner_join(life_expectancy %>% filter(year == 2018), by = "country_code") %>%
inner_join(country_codes, by = "country_code")
# Filter and join the datasets
merged_data <- healthcare_spending %>%
filter(year == 2018) %>%
inner_join(life_expectancy %>% filter(TIME == 2018), by = "LOCATION") %>%
inner_join(country_codes, by = "LOCATION")
names(healthcare_spending)
# Filter and join the datasets
merged_data <- healthcare_spending %>%
filter(TIME == 2018) %>%
inner_join(life_expectancy %>% filter(TIME == 2018), by = "LOCATION") %>%
inner_join(country_codes, by = "LOCATION")
# Filter and join the datasets
merged_data <- healthcare_spending %>%
filter(TIME == 2018) %>%
group_by(LOCATION) %>%
summarize(Value.x = first(Value),
.groups = "drop") %>%
inner_join(life_expectancy %>% filter(TIME == 2018), by = "LOCATION") %>%
inner_join(country_codes, by = "LOCATION")
# task 1
df_countryCodes <- rename(df_countryCodes, 'LOCATION' = 'CODE', 'country' = 'Country')
setwd("C:/Users/shenxuan/Desktop/R/Assignment2")
library(dplyr)
library(ggplot2)
library(readr)
library(ggrepel)
countryCodes <- read.csv("country_codes.csv")
healthcareSpending <- read.csv("healthcare_spending.csv")
lifeExpectancy <- read.csv("life_expectancy.csv")
countryCodes <- rename(countryCodes, 'LOCATION' = 'CODE', 'country' = 'Country')
healthcareSpending <- rename(healthcareSpending, 'spending_pct_gdp' = 'Value')
lifeExpectancy <- rename(lifeExpectancy, 'life_expectancy' = 'Value')
healthcareSpending_2018 <- healthcareSpending %>%
filter(TIME == 2018) %>%
filter(SUBJECT == 'TOT') %>%
filter(MEASURE == 'PC_GDP') %>%
select(LOCATION, spending_pct_gdp)
lifeExpectancy_2018 <- lifeExpectancy %>%
filter(TIME == 2018) %>%
filter(SUBJECT == 'TOT') %>%
select(LOCATION, life_expectancy)
merged_df <- countryCodes %>%
left_join(healthcareSpending_2018, by = 'LOCATION') %>%
left_join(lifeExpectancy_2018, by = 'LOCATION') %>%
filter(complete.cases(.)) %>%
select(country, spending_pct_gdp, life_expectancy) %>%
arrange(desc(life_expectancy))
head(merged_df)
setwd("C:/Users/shenxuan/Desktop/R/Assignment2")
library(dplyr)
library(ggplot2)
library(readr)
library(ggrepel)
# Read data
countryCodes <- read.csv("country_codes.csv") %>%
rename('LOCATION' = 'CODE', 'country' = 'Country')
healthcareSpending <- read.csv("healthcare_spending.csv") %>%
rename('spending_pct_gdp' = 'Value')
lifeExpectancy <- read.csv("life_expectancy.csv") %>%
rename('life_expectancy' = 'Value')
# Filter and select data for 2018
healthcareSpending_2018 <- healthcareSpending %>%
filter(TIME == 2018, SUBJECT == 'TOT', MEASURE == 'PC_GDP') %>%
select(LOCATION, spending_pct_gdp)
lifeExpectancy_2018 <- lifeExpectancy %>%
filter(TIME == 2018, SUBJECT == 'TOT') %>%
select(LOCATION, life_expectancy)
# Merge data and filter complete cases
merged_df <- countryCodes %>%
left_join(healthcareSpending_2018, by = 'LOCATION') %>%
left_join(lifeExpectancy_2018, by = 'LOCATION') %>%
filter(complete.cases(.)) %>%
select(country, spending_pct_gdp, life_expectancy) %>%
arrange(desc(life_expectancy))
head(merged_df)
# Generate scatter plot with country names
scatter_plot <- ggplot(merged_df, aes(x = spending_pct_gdp, y = life_expectancy)) +
geom_point() +
geom_text_repel(aes(label = country), force = 1, segment.color = 'transparent') +
labs(x = "Spending (% of GDP)", y = "Life Expectancy") +
theme_minimal()
# Display the scatter plot
scatter_plot
